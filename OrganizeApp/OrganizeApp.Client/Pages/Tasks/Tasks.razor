@using TaskStatus = OrganizeApp.Shared.Common.Enums.TaskStatus;

@rendermode _renderMode
@page "/tasks"

<PageTitle>Moje zadania</PageTitle>

<Auth>
    <ChildContent Context="AuthContext">

        @if (_isLoading)
        {
            <Loading />
        }
        else if (_tasksList is null)
        {
            <h5 class="col-12 my-5 text-center fw-bold">Brak danych!</h5>
        }
        else
        {
            <h2>Moje zadania</h2>

            <Modal @ref="Modal" Title="Usuwanie zadań"
                   IconStyleId="Modal.IconStyle.Warning"
                   HeaderColor="#4340D2"
                   ButtonStyleId="Modal.ButtonStyle.YesNo"
                   OnClickButtonYes="() => DeleteTasks(AuthContext)"
                   OnClickButtonNo="CancelDelete"
                   IsXCloseButtonVisible="false">
                <Content>
                    Czy na pewno chcesz usunąć zaznaczone zadania?
                </Content>
            </Modal>

            <div class="mt-4 btn-row">
                <button class="btn @(_isDeleteTrybeEnabled ? "btn-danger" : "btn-secondary") btn-delete-tasks me-1" @onclick="Delete">
                    <span class="fa-regular--trash-alt me-1" />
                    <span>@(_isDeleteTrybeEnabled ? "Usuń" : "Usuwanie")</span>
                </button>

                <button id="1" class="btn btn-secondary @(_isDeleteTrybeEnabled ? "" : "hide-element")" @onclick="CancelDeleteTrybe">Anuluj</button>
            </div>

            <div class="canban-table mt-3">

                <div class="canban-column p-2 rounded" data-id="@Convert.ToInt32(TaskStatus.ToDo)">
                    <p class="canban-header">
                        <b class="me-2">Zaplanowane</b>
                        <span class="ri--todo-line"></span>
                    </p>

                    @if (_tasksList.Any() && (_tasksList.FirstOrDefault(x => x.TaskStatus == TaskStatus.ToDo) is not null))
                    {
                        @foreach (var task in _tasksList)
                        {
                            @if (task.TaskStatus == TaskStatus.ToDo)
                            {
                                <div @onmouseenter="() => OnMouseEnter(task.Id)" class="border-1 rounded my-4 p-2 @(_isDeleteTrybeEnabled ? "draggable-task-disabled" : "draggable-task")" data-id="@task.Id">

                                    <div class="task-header">
                                        <h6 class="text-start col-11">
                                            @task.Title
                                        </h6>
                                        <span class="nimbus--edit col-1 @(_isDeleteTrybeEnabled ? "hide-element" : "")" @onclick="() => EditTask(task.Id)"></span>
                                        <input type="checkbox" class="task-checkbox form-check-input border-black @(_isDeleteTrybeEnabled ? "" : "hide-element")" @onchange="(e) => AddTaskToListDeletingItems(task.Id, e)" />
                                    </div>

                                    <div class="task-footer mt-2">
                                        <span>
                                            <a class="task-link @(_isDeleteTrybeEnabled ? "disabled-link" : "")" @onclick="() => OpenDescription(task.Id)">Czytaj opis...</a>
                                        </span>
                                        @if (task.DateOfPlannedStart is not null)
                                        {
                                            <span>Rozpoczęcie: @task.DateOfPlannedStart.Value.ToString("dd-MM-yyyy HH:mm")</span>
                                        }
                                    </div>
                                </div>
                            }
                        }
                    }
                    else
                    {
                        <div class="text-center my-4 fw-bold">Brak zadań!</div>
                    }
                </div>

                <div class="ms-4 me-4 canban-column p-2 rounded" data-id="@Convert.ToInt32(TaskStatus.InProgress)">
                    <p class="canban-header">
                        <b class="me-2">W trakcie</b>
                        <span class="bxs--hourglass"></span>
                    </p>

                    @if (_tasksList.Any() && (_tasksList.FirstOrDefault(x => x.TaskStatus == TaskStatus.InProgress) is not null))
                    {
                        @foreach (var task in _tasksList)
                        {
                            if (task.TaskStatus == TaskStatus.InProgress)
                            {
                                <div @onmouseenter="() => OnMouseEnter(task.Id)" class="border-1 rounded my-4 p-2 @(_isDeleteTrybeEnabled ? "draggable-task-disabled" : "draggable-task")" data-id="@task.Id">

                                    <div class="task-header">
                                        <h6 class="text-start col-11">
                                            @task.Title
                                        </h6>
                                        <span class="nimbus--edit col-1 @(_isDeleteTrybeEnabled ? "hide-element" : "")" @onclick="() => EditTask(task.Id)"></span>
                                        <input type="checkbox" class="task-checkbox form-check-input border-black @(_isDeleteTrybeEnabled ? "" : "hide-element")" @onchange="(e) => AddTaskToListDeletingItems(task.Id, e)" />
                                    </div>

                                    <div class="task-footer mt-2">
                                        <span>
                                            <a class="task-link @(_isDeleteTrybeEnabled ? "disabled-link" : "")" @onclick="() => OpenDescription(task.Id)">Czytaj opis...</a>
                                        </span>
                                        @if (task.DateOfPlannedEnd is not null)
                                        {
                                            <span>Zakończenie: @task.DateOfPlannedEnd.Value.ToString("dd-MM-yyyy HH:mm")</span>
                                        }
                                    </div>
                                </div>
                            }
                        }
                    }
                    else
                    {
                        <div class="text-center my-4 fw-bold">Brak zadań!</div>
                    }
                </div>

                <div class="canban-column p-2 rounded" data-id="@Convert.ToInt32(TaskStatus.Complete)">
                    <p class="canban-header">
                        <b class="me-2">Zakończone</b>
                        <span class="fluent-mdl2--completed"></span>
                    </p>

                    @if (_tasksList.Any() && (_tasksList.FirstOrDefault(x => x.TaskStatus == TaskStatus.Complete) is not null))
                    {

                        @foreach (var task in _tasksList)
                        {
                            if (task.TaskStatus == TaskStatus.Complete)
                            {
                                <div @onmouseenter="() => OnMouseEnter(task.Id)" class="border-1 rounded my-4 p-2 @(_isDeleteTrybeEnabled ? "draggable-task-disabled" : "draggable-task")" data-id="@task.Id">

                                    <div class="task-header">
                                        <h6 class="text-start col-11">
                                            @task.Title
                                        </h6>
                                        <span class="nimbus--edit col-1 @(_isDeleteTrybeEnabled ? "hide-element" : "")" @onclick="() => EditTask(task.Id)"></span>
                                        <input type="checkbox" class="task-checkbox form-check-input border-black @(_isDeleteTrybeEnabled ? "" : "hide-element")" @onchange="(e) => AddTaskToListDeletingItems(task.Id, e)" />
                                    </div>

                                    <div class="text-end mt-2">

                                        <div class="task-footer mt-2">
                                            <span>
                                                <a class="task-link @(_isDeleteTrybeEnabled ? "disabled-link" : "")" @onclick="() => OpenDescription(task.Id)">Czytaj opis...</a>
                                            </span>
                                            @if (task.DateOfComplete is not null)
                                            {
                                                <span>Zakończono: @task.DateOfComplete.Value.ToString("dd-MM-yyyy HH:mm")</span>

                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    }
                    else
                    {
                        <div class="text-center my-4 fw-bold">Brak zadań!</div>
                    }
                </div>
            </div>
        }
    </ChildContent>
</Auth>